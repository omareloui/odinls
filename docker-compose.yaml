services:
  db:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${DB_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${DB_PASSWORD}
    volumes:
      - db:/data/db
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017 --quiet
      interval: 10s
      timeout: 10s
      retries: 5
    ports:
      - 27017:27017
    env_file:
      - path: ./.env
        required: true
    networks:
      - default

  odinls:
    build:
      context: .
      dockerfile: ./build/package/Dockerfile
    init: true
    ports:
      - 3000:3000
    depends_on:
      - db
    env_file:
      - path: ./.env
        required: true
    networks:
      - default

  odinls-dev:
    build:
      context: .
      dockerfile: ./build/package/dev.Dockerfile
    init: true
    ports:
      - 3000:3000
    env_file:
      - path: ./.env
        required: true
    networks:
      - default
    depends_on:
      - db
    develop:
      watch:
        - action: rebuild
          path: ./go.sum
          target: /usr/src/go.sum
        - action: rebuild
          path: ./go.mod
          target: /usr/src/go.mod
        - action: rebuild
          path: ./.env
        - action: sync
          path: ./cmd
          target: /usr/src/cmd
        - action: sync
          path: ./config
          target: /usr/src/config
        - action: sync
          path: ./internal
          target: /usr/src/internal
        - action: sync
          path: ./web
          target: /usr/src/web

networks:
  default:
volumes:
  db:
